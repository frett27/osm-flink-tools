<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Apache Flink Web Dashboard</title>
    <link rel="apple-touch-icon" sizes="180x180" href="http://localhost:8082/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" href="http://localhost:8082/images/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="http://localhost:8082/images/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="http://localhost:8082/images/manifest.json">
    <link rel="mask-icon" href="http://localhost:8082/images/safari-pinned-tab.svg" color="#aa1919">
    <link rel="shortcut icon" href="http://localhost:8082/images/favicon.ico">
    <meta name="msapplication-config" content="images/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <link rel="stylesheet" href="Apache%20Flink%20Web%20Dashboard_fichiers/vendor.css" type="text/css">
    <link rel="stylesheet" href="Apache%20Flink%20Web%20Dashboard_fichiers/index.css" type="text/css">
    <script src="Apache%20Flink%20Web%20Dashboard_fichiers/vendor.js"></script>
    <script src="Apache%20Flink%20Web%20Dashboard_fichiers/index.js"></script>
  </head>
  <body ng-app="flinkApp" ng-strict-di="" class="ng-scope">
    <div id="sidebar" ng-class="{ 'sidebar-visible': sidebarVisible }">
      <nav class="navbar navbar-inverse navbar-static-top">
        <div class="navbar-header"><a ui-sref="overview" class="navbar-brand" href="#/overview"><img alt="Apache Flink Dashboard" src="Apache%20Flink%20Web%20Dashboard_fichiers/flink-logo.png" class="logo"></a><a ui-sref="overview" class="navbar-brand navbar-brand-text" href="#/overview">Apache Flink Dashboard</a></div>
      </nav>
      <div class="navbar navbar-sidebar">
        <ul class="nav">
          <li><a ui-sref="overview" ui-sref-active="active" href="#/overview" class=""><i class="fa fa-dashboard fa-fw"></i> 
              Overview</a></li>
          <li><a ui-sref="running-jobs" ui-sref-active="active" href="#/running-jobs"><i class="fa fa-tasks fa-fw"></i> 
              Running Jobs</a></li>
          <li><a ui-sref="completed-jobs" ui-sref-active="active" href="#/completed-jobs"><i class="fa fa-check-circle fa-fw"></i> 
              Completed Jobs</a></li>
          <li><a ui-sref="all-manager" ui-sref-active="active" href="#/taskmanagers"><i class="fa fa-sitemap fa-fw"></i> 
              Task Managers</a></li>
          <li><a ui-sref="jobmanager.config" ui-sref-active="active" href="#/jobmanager/config"><i class="fa fa-server fa-fw"></i> 
              Job Manager</a></li>
          <li><a ui-sref="submit" ui-sref-active="active" href="#/submit"><i class="fa fa-upload fa-fw"></i> 
              Submit new Job</a></li>
        </ul>
      </div>
    </div>
    <div id="content" ng-class="{ 'sidebar-visible': sidebarVisible }">
      <!-- uiView: main --><div id="main" ui-view="main" class="ng-scope">
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<!-- ngIf: job --><nav ng-if="job" class="navbar navbar-default navbar-fixed-top navbar-main ng-scope">
  <div id="fold-button" ng-click="showSidebar()" class="btn btn-default navbar-btn pull-left"><i class="fa fa-navicon"></i></div>
  <div class="navbar-title-job">
    <div class="container-fluid no-padding">
      <div class="row no-margin">
        <div class="col-xs-1 no-padding">
          <i title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope fa fa-circle indicator indicator-success"></i>
        </div>
        <div class="col-xs-11 no-padding">
          <div class="row">
            <div class="col-xs-12 job-name ng-binding">Flink Java Job at Thu Jul 27 17:33:48 UTC 2017</div>
          </div>
          <div class="row">
            <div class="col-xs-12 job-id ng-binding">1f690d6afc146dab45c12b8727b86997</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- ngIf: job.isStoppable && job.state=='RUNNING' -->
  <!-- ngIf: job.state=='RUNNING' || job.state=='CREATED' || job.state=='RESTARTING' -->
  <div class="navbar-info first last hidden-xs hidden-sm ng-binding">2017-07-27, 19:33:49<!-- ngIf: job['end-time'] > -1 --><span ng-if="job['end-time'] &gt; -1" class="ng-binding ng-scope">
      - 
      2017-07-28, 15:00:18</span><!-- end ngIf: job['end-time'] > -1 --></div>
  <!-- ngIf: job.duration > -1 --><div ng-if="job.duration &gt; -1" title="19h 26m 29s" class="navbar-info last first ng-binding ng-scope">19h 26m</div><!-- end ngIf: job.duration > -1 -->
  <div class="navbar-info first last hidden-xs hidden-sm">
    <div class="label-group">
      <!-- ngRepeat: (status, value) in job['status-counts'] --><span title="CREATED" ng-class="getLabelClass()" status="CREATED" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">25</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] --><span title="RECONCILING" ng-class="getLabelClass()" status="RECONCILING" ng-repeat="(status, value) in job['status-counts']" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (status, value) in job['status-counts'] -->
    </div>
  </div>
</nav><!-- end ngIf: job -->
<!-- ngIf: job --><nav ng-if="job" class="navbar navbar-default navbar-fixed-top navbar-main-additional ng-scope">
  <ul class="nav nav-tabs">
    <li ui-sref-active="active" class="active"><a ui-sref=".plan" href="#/jobs/1f690d6afc146dab45c12b8727b86997">Overview</a></li>
    <li ui-sref-active="active" class=""><a ui-sref=".timeline" href="#/jobs/1f690d6afc146dab45c12b8727b86997/timeline">Timeline</a></li>
    <li ui-sref-active="active"><a ui-sref=".exceptions" href="#/jobs/1f690d6afc146dab45c12b8727b86997/exceptions">Exceptions</a></li>
    <li ui-sref-active="active"><a ui-sref=".config" href="#/jobs/1f690d6afc146dab45c12b8727b86997/config">Configuration</a></li>
  </ul>
</nav><!-- end ngIf: job -->
<div id="content-inner" class="has-navbar-main-additional ng-scope">
  <!-- uiView: details --><div id="details" ui-view="details" class="ng-scope">
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<split class="ng-scope">
  <div id="canvas" class="split" style="height: calc(50% - 5px);">
    <div class="canvas-wrapper">
      <div job-plan="job-plan" plan="plan" watermarks="watermarks" jobid="1f690d6afc146dab45c12b8727b86997" set-node="changeNode(nodeid)" class="main-canvas ng-isolate-scope"><svg class="graph" style="width: 1628px;"><g transform="translate(222.03445180482618,-19.9086796825153) scale(0.30354872109876174)"><g class="output"><g class="clusters"></g><g class="edgePaths"><g class="edgePath" style="opacity: 1;"><path class="path" d="M2658.050018310547,562L2756.050018310547,562L2852.050018310547,562" marker-end="url(http://localhost:8082/#arrowhead550524)" style="fill: none;"></path><defs><marker id="arrowhead550524" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M327.183349609375,620.965496166941L378.183349609375,586.7500038146973L530.75,586.7500038146973" marker-end="url(http://localhost:8082/#arrowhead550525)" style="fill: none;"></path><defs><marker id="arrowhead550525" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3556.183349609375,346.92499923706055L3607.183349609375,346.92499923706055L3743.6868644519113,536.125" marker-end="url(http://localhost:8082/#arrowhead550526)" style="fill: none;"></path><defs><marker id="arrowhead550526" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3145.683349609375,1125.4500045776367L3212.1666870117188,1125.4500045776367L3412.675018310547,1125.4500045776367L3607.183349609375,1125.4500045776367L3771.909601080243,709.625" marker-end="url(http://localhost:8082/#arrowhead550527)" style="fill: none;"></path><defs><marker id="arrowhead550527" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3150.9500274658203,854.4500045776367L3212.1666870117188,854.4500045776367L3271.5833435058594,854.4500045776367" marker-end="url(http://localhost:8082/#arrowhead550528)" style="fill: none;"></path><defs><marker id="arrowhead550528" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2660.050018310547,908.76126769512L2756.050018310547,854.4500045776367L2856.2666778564453,854.4500045776367" marker-end="url(http://localhost:8082/#arrowhead550529)" style="fill: none;"></path><defs><marker id="arrowhead550529" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1761.86669921875,176.6517424691077L1857.86669921875,116.8499984741211L2106.4500274658203,116.8499984741211L2316.0333557128906,116.8499984741211L2516.5416870117188,116.8499984741211L2756.050018310547,116.8499984741211L2913.566680908203,116.8499984741211" marker-end="url(http://localhost:8082/#arrowhead550530)" style="fill: none;"></path><defs><marker id="arrowhead550530" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M327.183349609375,1140.8591253759644L378.183349609375,1108.9500007629395L529.2750091552734,1108.9500007629395" marker-end="url(http://localhost:8082/#arrowhead550531)" style="fill: none;"></path><defs><marker id="arrowhead550531" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M327.183349609375,813.6345099365747L378.183349609375,847.8500022888184L429.183349609375,847.8500022888184" marker-end="url(http://localhost:8082/#arrowhead550532)" style="fill: none;"></path><defs><marker id="arrowhead550532" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M327.183349609375,1275.6204384564269L378.183349609375,1291.5750007629395L679.8416748046875,1291.5750007629395L1004.5,1291.5750007629395L1219.5916748046875,1291.5750007629395L1417.683349609375,1291.5750007629395L1618.2750244140625,1291.5750007629395L1857.86669921875,1291.5750007629395L2016.4083557128906,1291.5750007629395" marker-end="url(http://localhost:8082/#arrowhead550533)" style="fill: none;"></path><defs><marker id="arrowhead550533" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1755.2833557128906,847.8500022888184L1857.86669921875,847.8500022888184L1954.8916931152344,847.8500022888184" marker-end="url(http://localhost:8082/#arrowhead550534)" style="fill: none;"></path><defs><marker id="arrowhead550534" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3093.6500244140625,116.8499984741211L3212.1666870117188,116.8499984741211L3330.3626800883494,252.47500228881836" marker-end="url(http://localhost:8082/#arrowhead550535)" style="fill: none;"></path><defs><marker id="arrowhead550535" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3155.1666870117188,562L3212.1666870117188,562L3324.621961413686,441.37499618530273" marker-end="url(http://localhost:8082/#arrowhead550536)" style="fill: none;"></path><defs><marker id="arrowhead550536" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1290.875015258789,1108.9500007629395L1417.683349609375,1108.9500007629395L1545.7132351231164,942.2999992370605" marker-end="url(http://localhost:8082/#arrowhead550537)" style="fill: none;"></path><defs><marker id="arrowhead550537" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1290.875015258789,586.7500038146973L1417.683349609375,586.7500038146973L1545.7132351231164,753.4000053405762" marker-end="url(http://localhost:8082/#arrowhead550538)" style="fill: none;"></path><defs><marker id="arrowhead550538" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2259.0333557128906,547L2316.0333557128906,547L2375.0333557128906,551.4137816831213" marker-end="url(http://localhost:8082/#arrowhead550539)" style="fill: none;"></path><defs><marker id="arrowhead550539" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2237.8133795712406,751.2000007629395L2316.0333557128906,693.6500015258789L2375.0333557128906,654.9117105046905" marker-end="url(http://localhost:8082/#arrowhead550540)" style="fill: none;"></path><defs><marker id="arrowhead550540" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2196.49169921875,1291.5750007629395L2316.0333557128906,1291.5750007629395L2428.8930337505194,1121.8000106811523" marker-end="url(http://localhost:8082/#arrowhead550541)" style="fill: none;"></path><defs><marker id="arrowhead550541" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2258.0083618164062,862.5659268650712L2316.0333557128906,868.2000045776367L2373.0333557128906,902.8107858606215" marker-end="url(http://localhost:8082/#arrowhead550542)" style="fill: none;"></path><defs><marker id="arrowhead550542" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2253.791702270508,266.0999984741211L2316.0333557128906,266.0999984741211L2375.4500122070312,266.0999984741211" marker-end="url(http://localhost:8082/#arrowhead550543)" style="fill: none;"></path><defs><marker id="arrowhead550543" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1761.86669921875,266.0999984741211L1857.86669921875,266.0999984741211L1959.1083526611328,266.0999984741211" marker-end="url(http://localhost:8082/#arrowhead550544)" style="fill: none;"></path><defs><marker id="arrowhead550544" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M3954.36669921875,622.875L4005.36669921875,622.875L4056.36669921875,622.875" marker-end="url(http://localhost:8082/#arrowhead550545)" style="fill: none;"></path><defs><marker id="arrowhead550545" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M2660.050018310547,1071.1387414601536L2756.050018310547,1125.4500045776367L2861.5333557128906,1125.4500045776367" marker-end="url(http://localhost:8082/#arrowhead550546)" style="fill: none;"></path><defs><marker id="arrowhead550546" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M930.5,847.8500022888184L1004.5,847.8500022888184L1078.5,847.8500022888184" marker-end="url(http://localhost:8082/#arrowhead550547)" style="fill: none;"></path><defs><marker id="arrowhead550547" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M828.933349609375,586.7500038146973L1004.5,586.7500038146973L1148.308334350586,586.7500038146973" marker-end="url(http://localhost:8082/#arrowhead550548)" style="fill: none;"></path><defs><marker id="arrowhead550548" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M830.4083404541016,1108.9500007629395L1004.5,1108.9500007629395L1148.308334350586,1108.9500007629395" marker-end="url(http://localhost:8082/#arrowhead550549)" style="fill: none;"></path><defs><marker id="arrowhead550549" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g><g class="edgePath" style="opacity: 1;"><path class="path" d="M1709.156097902641,372.6500015258789L1857.86669921875,547L1953.86669921875,547" marker-end="url(http://localhost:8082/#arrowhead550550)" style="fill: none;"></path><defs><marker id="arrowhead550550" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" style="stroke-width: 1; stroke-dasharray: 1, 0;"></path></marker></defs></g></g><g class="edgeLabels"><g class="edgeLabel" style="opacity: 1;" transform="translate(2756.050018310547,592)"><g transform="translate(-71,-20)" class="label"><foreignObject width="142" height="40"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Hash Partition on [0],<br>Sort on [0:ASC,1:ASC]</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(378.183349609375,606.7500038146973)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(3607.183349609375,366.92499923706055)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(3412.675018310547,1145.4500045776367)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(3212.1666870117188,874.4500045776367)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2756.050018310547,874.4500045776367)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,136.8499984741211)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(378.183349609375,1128.9500007629395)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(378.183349609375,867.8500022888184)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1219.5916748046875,1311.5750007629395)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1857.86669921875,877.8500022888184)"><g transform="translate(-71,-20)" class="label"><foreignObject width="142" height="40"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Hash Partition on [0],<br>Sort on [0:ASC,1:ASC]</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(3212.1666870117188,136.8499984741211)"><g transform="translate(-32,-10)" class="label"><foreignObject width="64" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Broadcast</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(3212.1666870117188,582)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1417.683349609375,1128.9500007629395)"><g transform="translate(-32,-10)" class="label"><foreignObject width="64" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Broadcast</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1417.683349609375,606.7500038146973)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,567)"><g transform="translate(-32,-10)" class="label"><foreignObject width="64" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Broadcast</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,713.6500015258789)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,1311.5750007629395)"><g transform="translate(-32,-10)" class="label"><foreignObject width="64" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Broadcast</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,888.2000045776367)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2316.0333557128906,286.0999984741211)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1857.86669921875,286.0999984741211)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(4005.36669921875,642.875)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(2756.050018310547,1145.4500045776367)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1004.5,867.8500022888184)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1004.5,616.7500038146973)"><g transform="translate(-49,-20)" class="label"><foreignObject width="98" height="40"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward,<br>Sort on [0:ASC]</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1004.5,1138.9500007629395)"><g transform="translate(-49,-20)" class="label"><foreignObject width="98" height="40"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward,<br>Sort on [1:ASC]</div></div></foreignObject></g></g><g class="edgeLabel" style="opacity: 1;" transform="translate(1857.86669921875,567)"><g transform="translate(-26,-10)" class="label"><foreignObject width="52" height="20"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div class="edge-label">Forward</div></div></foreignObject></g></g></g><g class="nodes"><g class="node node-normal" style="opacity: 1;" transform="translate(3003.608352661133,562)"><rect rx="0" ry="0" x="-151.55833435058594" y="-96.6500015258789" width="303.1166687011719" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-141.55833435058594,-86.6500015258789)"><foreignObject width="283.1166687011719" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/c4e5c0c7e7124c94f14c4ddffe87f958" class="node-label node-normal"><h3 class="node-name">GroupReduce</h3><h4 class="step-name">GroupReduce (GroupReduce at co<br>nstructOSMStreams(ProcessOSM.j<br>ava:259))</h4><h5>Parallelism: 7</h5><h5>Operation: Sorted Group Reduce</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2516.5416870117188,562)"><rect rx="0" ry="0" x="-141.50833129882812" y="-102.1500015258789" width="283.01666259765625" height="204.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-131.50833129882812,-92.1500015258789)"><foreignObject width="263.01666259765625" height="184.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/60febe8a4a89019352cb9e426372a420" class="node-label node-normal"><h3 class="node-name">Join</h3><h4 class="step-name">Join(Join at projectTupleX(Joi<br>nOperator.java:1281))</h4><h5>Parallelism: 7</h5><h5>Operation: Hybrid Hash (build: FlatMap (F<br>latMap at constructOSMStreams(<br>ProcessOSM.java:221)))</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(679.8416748046875,586.7500038146973)"><rect rx="0" ry="0" x="-149.0916748046875" y="-86.75" width="298.183349609375" height="173.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-139.0916748046875,-76.75)"><foreignObject width="278.183349609375" height="153.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/4ed9c4fd2991ce4508f18e2f19829f3e" class="node-label node-normal"><h3 class="node-name">Map</h3><h4 class="step-name">Map (Map at constructOSMStream<br>s(ProcessOSM.java:75))</h4><h5>Parallelism: 7</h5><h5>Operation: Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(183.5916748046875,717.3000030517578)"><rect rx="0" ry="0" x="-143.5916748046875" y="-106.55000305175781" width="287.183349609375" height="213.10000610351562"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-133.5916748046875,-96.55000305175781)"><foreignObject width="267.183349609375" height="193.10000610351562"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/8e397bb88e65f6ce21f5085823a3fbb5" class="node-label node-normal"><h3 class="node-name">Data Source</h3><h4 class="step-name">DataSource (at constructOSMStr<br>eams(ProcessOSM.java:63) (org.<br>frett27.spatialflink.inputs.OS<br>MPBFNodeInputFormat))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3806.2750244140625,622.875)"><rect rx="0" ry="0" x="-148.0916748046875" y="-86.75" width="296.183349609375" height="173.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-138.0916748046875,-76.75)"><foreignObject width="276.183349609375" height="153.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/9bde1516e6cab2a6ca4de6c81445400c" class="node-label node-normal"><h3 class="node-name">Map</h3><h4 class="step-name">Map (Map at main(ProcessOSM.ja<br>va:592))</h4><h5>Parallelism: 7</h5><h5>Operation: Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3412.675018310547,346.92499923706055)"><rect rx="0" ry="0" x="-143.50833129882812" y="-94.44999694824219" width="287.01666259765625" height="188.89999389648438"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-133.50833129882812,-84.44999694824219)"><foreignObject width="267.01666259765625" height="168.89999389648438"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/35108828607e40575a55ab1e7cc46261" class="node-label node-normal"><h3 class="node-name">Join</h3><h4 class="step-name">Join(Join at constructOSMStrea<br>ms(ProcessOSM.java:299))</h4><h5>Parallelism: 7</h5><h5>Operation: Hybrid Hash (build: Map (Key E<br>xtractor))</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3003.608352661133,1125.4500045776367)"><rect rx="0" ry="0" x="-142.0749969482422" y="-86.75" width="284.1499938964844" height="173.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-132.0749969482422,-76.75)"><foreignObject width="264.1499938964844" height="153.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/e3675c6ff1b96398d9899094ad9be5b6" class="node-label node-normal"><h3 class="node-name">Filter</h3><h4 class="step-name">Filter (Filter at constructOSM<br>Streams(ProcessOSM.java:318))</h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3412.675018310547,854.4500045776367)"><rect rx="0" ry="0" x="-141.0916748046875" y="-96.6500015258789" width="282.183349609375" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-131.0916748046875,-86.6500015258789)"><foreignObject width="262.183349609375" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/6ae8f581c0be3c67bd2c04cae3aa8480" class="node-label node-normal"><h3 class="node-name">Data Sink</h3><h4 class="step-name">DataSink (CsvOutputFormat (pat<br>h: /tmp2/ways.csv, delimiter: <br>,))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3003.608352661133,854.4500045776367)"><rect rx="0" ry="0" x="-147.3416748046875" y="-114.25" width="294.683349609375" height="228.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-137.3416748046875,-104.25)"><foreignObject width="274.683349609375" height="208.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/b3ab83dc53fb9f237a15685ba9b2c583" class="node-label node-normal"><h3 class="node-name">Filter -&gt; Map</h3><h4 class="step-name">Filter (Filter at constructOSM<br>Streams(ProcessOSM.java:331))&lt;<br>br/&gt; -&gt; Map (Map at main(Pr<br>ocessOSM.java:600))</h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap<br> -&gt; Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2516.5416870117188,989.9500045776367)"><rect rx="0" ry="0" x="-143.50833129882812" y="-131.8499984741211" width="287.01666259765625" height="263.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-133.50833129882812,-121.8499984741211)"><foreignObject width="267.01666259765625" height="243.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/520a2445bb0d4fdd96086ca7791bc301" class="node-label node-normal"><h3 class="node-name">Join -&gt; Map</h3><h4 class="step-name">Join(Join at constructOSMStrea<br>ms(ProcessOSM.java:152))<br> <br>-&gt; Map (Map at constructOSM<br>Streams(ProcessOSM.java:178))</h4><h5>Parallelism: 7</h5><h5>Operation: Hybrid Hash (build: Map (Key E<br>xtractor))<br> -&gt; Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(3003.608352661133,116.8499984741211)"><rect rx="0" ry="0" x="-90.04167175292969" y="-76.8499984741211" width="180.08334350585938" height="153.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-80.04167175292969,-66.8499984741211)"><foreignObject width="160.08334350585938" height="133.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/96c2d08c5a7b9504b5c28e820f0e801c" class="node-label node-normal"><h3 class="node-name">Map</h3><h4 class="step-name">Map (Key Extractor)</h4><h5>Parallelism: 7</h5><h5>Operation: Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(1618.2750244140625,266.0999984741211)"><rect rx="0" ry="0" x="-143.5916748046875" y="-106.55000305175781" width="287.183349609375" height="213.10000610351562"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-133.5916748046875,-96.55000305175781)"><foreignObject width="267.183349609375" height="193.10000610351562"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/f7c27ee59fff3ba46848ae73eb15a2bc" class="node-label node-normal"><h3 class="node-name">Data Source</h3><h4 class="step-name">DataSource (at constructOSMStr<br>eams(ProcessOSM.java:71) (org.<br>frett27.spatialflink.inputs.OS<br>MPBFRelationInputFormat))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(679.8416748046875,1108.9500007629395)"><rect rx="0" ry="0" x="-150.56666564941406" y="-86.75" width="301.1333312988281" height="173.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-140.56666564941406,-76.75)"><foreignObject width="281.1333312988281" height="153.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/4fc3dd8acd7e4a108c1b7af8b7a2ed42" class="node-label node-normal"><h3 class="node-name">FlatMap</h3><h4 class="step-name">FlatMap (FlatMap at constructO<br>SMStreams(ProcessOSM.java:92))</h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(183.5916748046875,1230.7000007629395)"><rect rx="0" ry="0" x="-143.5916748046875" y="-106.55000305175781" width="287.183349609375" height="213.10000610351562"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-133.5916748046875,-96.55000305175781)"><foreignObject width="267.183349609375" height="193.10000610351562"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/369753f19cd7e2de35da17c00fa85ed1" class="node-label node-normal"><h3 class="node-name">Data Source</h3><h4 class="step-name">DataSource (at constructOSMStr<br>eams(ProcessOSM.java:67) (org.<br>frett27.spatialflink.inputs.OS<br>MPBFWayInputFormat))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(679.8416748046875,847.8500022888184)"><rect rx="0" ry="0" x="-250.6583251953125" y="-104.3499984741211" width="501.316650390625" height="208.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-240.6583251953125,-94.3499984741211)"><foreignObject width="481.316650390625" height="188.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/c94ed995c21372c4e79f73e7b33e1dff" class="node-label node-normal"><h3 class="node-name">Filter -&gt; Map</h3><h4 class="step-name">Filter (Filter at constructOSM<br>Streams(ProcessOSM.java:82))<b<br>r/&gt; -&gt; Map (Map at main(Pro<br>cessOSM.java:584))</b<br></h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap<br> -&gt; Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2106.4500274658203,1291.5750007629395)"><rect rx="0" ry="0" x="-90.04167175292969" y="-76.8499984741211" width="180.08334350585938" height="153.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-80.04167175292969,-66.8499984741211)"><foreignObject width="160.08334350585938" height="133.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/dc38254a46ba07c1a828e4be891fd2e3" class="node-label node-normal"><h3 class="node-name">Map</h3><h4 class="step-name">Map (Key Extractor)</h4><h5>Parallelism: 7</h5><h5>Operation: Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2106.4500274658203,847.8500022888184)"><rect rx="0" ry="0" x="-151.55833435058594" y="-96.6500015258789" width="303.1166687011719" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-141.55833435058594,-86.6500015258789)"><foreignObject width="283.1166687011719" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/f0234d5584098cbc3caa22e82b6a8fb6" class="node-label node-normal"><h3 class="node-name">GroupReduce</h3><h4 class="step-name">GroupReduce (GroupReduce at co<br>nstructOSMStreams(ProcessOSM.j<br>ava:113))</h4><h5>Parallelism: 7</h5><h5>Operation: Sorted Group Reduce</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(1618.2750244140625,847.8500022888184)"><rect rx="0" ry="0" x="-137.00833129882812" y="-94.44999694824219" width="274.01666259765625" height="188.89999389648438"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-127.00833129882812,-84.44999694824219)"><foreignObject width="254.01666259765625" height="168.89999389648438"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/c6968767d1babcb2123bb024ec2c29d4" class="node-label node-normal"><h3 class="node-name">Join</h3><h4 class="step-name">Join(Join at projectTupleX(Joi<br>nOperator.java:1281))</h4><h5>Parallelism: 7</h5><h5>Operation: Hybrid Hash (build: Sort-Parti<br>tion)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(1219.5916748046875,1108.9500007629395)"><rect rx="0" ry="0" x="-71.28334045410156" y="-76.8499984741211" width="142.56668090820312" height="153.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-61.28334045410156,-66.8499984741211)"><foreignObject width="122.56668090820312" height="133.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/e7211548bb73fd395f4f8da6c5b0348e" class="node-label node-normal"><h3 class="node-name">Sort-Partition</h3><h4 class="step-name">Sort-Partition</h4><h5>Parallelism: 7</h5><h5>Operation: No-Op</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(1219.5916748046875,586.7500038146973)"><rect rx="0" ry="0" x="-71.28334045410156" y="-76.8499984741211" width="142.56668090820312" height="153.6999969482422"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-61.28334045410156,-66.8499984741211)"><foreignObject width="122.56668090820312" height="133.6999969482422"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/0dd80e082838934b16d68690ce5f1075" class="node-label node-normal"><h3 class="node-name">Sort-Partition</h3><h4 class="step-name">Sort-Partition</h4><h5>Parallelism: 7</h5><h5>Operation: No-Op</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2106.4500274658203,547)"><rect rx="0" ry="0" x="-152.5833282470703" y="-96.6500015258789" width="305.1666564941406" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-142.5833282470703,-86.6500015258789)"><foreignObject width="285.1666564941406" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/abf26ebd34b8e949c6bb584bb72e3f10" class="node-label node-normal"><h3 class="node-name">FlatMap</h3><h4 class="step-name">FlatMap (FlatMap at constructO<br>SMStreams(ProcessOSM.java:221)<br>)</h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2516.5416870117188,266.0999984741211)"><rect rx="0" ry="0" x="-141.0916748046875" y="-96.6500015258789" width="282.183349609375" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-131.0916748046875,-86.6500015258789)"><foreignObject width="262.183349609375" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/b8d2a54079870821d82494439c7be3df" class="node-label node-normal"><h3 class="node-name">Data Sink</h3><h4 class="step-name">DataSink (CsvOutputFormat (pat<br>h: /tmp2/rels.csv, delimiter: <br>,))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(2106.4500274658203,266.0999984741211)"><rect rx="0" ry="0" x="-147.3416748046875" y="-114.25" width="294.683349609375" height="228.5"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-137.3416748046875,-104.25)"><foreignObject width="274.683349609375" height="208.5"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/75898a3acfdbaeb78c022a8ed4705fc7" class="node-label node-normal"><h3 class="node-name">Filter -&gt; Map</h3><h4 class="step-name">Filter (Filter at constructOSM<br>Streams(ProcessOSM.java:201))&lt;<br>br/&gt; -&gt; Map (Map at main(Pr<br>ocessOSM.java:609))</h4><h5>Parallelism: 7</h5><h5>Operation: FlatMap<br> -&gt; Map</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(4197.4583740234375,622.875)"><rect rx="0" ry="0" x="-141.0916748046875" y="-96.6500015258789" width="282.183349609375" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-131.0916748046875,-86.6500015258789)"><foreignObject width="262.183349609375" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/adf69ec40a76f2dc29a306b67d2787dd" class="node-label node-normal"><h3 class="node-name">Data Sink</h3><h4 class="step-name">DataSink (CsvOutputFormat (pat<br>h: /tmp2/polygons.csv, delimit<br>er: ,))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g><g class="node node-normal" style="opacity: 1;" transform="translate(1219.5916748046875,847.8500022888184)"><rect rx="0" ry="0" x="-141.0916748046875" y="-96.6500015258789" width="282.183349609375" height="193.3000030517578"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-131.0916748046875,-86.6500015258789)"><foreignObject width="262.183349609375" height="173.3000030517578"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><div href="#/jobs/1f690d6afc146dab45c12b8727b86997/vertex/f923efaaf7d76666cc86fa43dd3996cd" class="node-label node-normal"><h3 class="node-name">Data Sink</h3><h4 class="step-name">DataSink (CsvOutputFormat (pat<br>h: /tmp2/nodes.csv, delimiter:<br> ,))</h4><h5>Parallelism: 7</h5><h5>Operation: (none)</h5></div></div></foreignObject></g></g></g></g></g></g></svg> <svg class="tmp" width="1" height="1"><g></g></svg> <div class="btn-group zoom-buttons"> <a class="btn btn-default zoom-in" ng-click="zoomIn()"><i class="fa fa-plus"></i></a> <a class="btn btn-default zoom-out" ng-click="zoomOut()"><i class="fa fa-minus"></i></a> </div></div>
    </div>
  </div>
  <div class="gutter gutter-vertical" style="height: 10px;"></div><div id="job-panel" class="split" style="height: calc(50% - 5px);">
    <!-- ngIf: plan --><div ng-if="plan" class="panel panel-default panel-multi ng-scope">
      <nav class="navbar navbar-default navbar-secondary-additional">
        <ul class="nav nav-tabs">
          <li ui-sref-active="active" class="active"><a ui-sref=".subtasks({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997">Subtasks</a></li>
          <li ui-sref-active="active"><a ui-sref=".taskmanagers({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997/taskmanagers">Subtasks by TaskManager</a></li>
          <li ui-sref-active="active"><a ui-sref=".metrics({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997/metrics">Task Metrics</a></li>
          <li ui-sref-active="active"><a ui-sref=".watermarks({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997/watermarks">Watermarks</a></li>
          <li ui-sref-active="active"><a ui-sref=".accumulators({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997/accumulators">Accumulators</a></li>
          <li ui-sref-active="active"><a ui-sref=".checkpoints({nodeid: nodeid})" href="#/jobs/1f690d6afc146dab45c12b8727b86997/checkpoints">Checkpoints</a></li>
          <!-- ngIf: job.state == 'RUNNING' -->
        </ul>
      </nav>
      <!-- uiView: node-details --><div id="node-details" ui-view="node-details" class="panel-body clean ng-scope">
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<table class="table table-body-hover table-clickable table-activable ng-scope">
  <thead>
    <tr>
      <th>Start Time</th>
      <th>End Time</th>
      <th>Duration</th>
      <th>Name</th>
      <th>Bytes received</th>
      <th>Records received</th>
      <th>Bytes sent</th>
      <th>Records sent</th>
      <th>Parallelism</th>
      <th>Tasks</th>
      <th>Status</th>
    </tr>
  </thead>
  <!-- ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope active">
    <!-- ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:33:53</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 1:19:19</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="5h 45m 26s" class="ng-binding ng-scope">5h 45m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSource (at constructOSMStreams(ProcessOSM.java:63) (org.frett27.spatialflink.inputs.OSMPBFNodeInputFormat))</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td title="246682308636 bytes" class="ng-binding">230 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:33:53</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="1h 10m 25s" class="ng-binding ng-scope">1h 10m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSource (at constructOSMStreams(ProcessOSM.java:71) (org.frett27.spatialflink.inputs.OSMPBFRelationInputFormat))</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td title="4158237828 bytes" class="ng-binding">3.87 GB</td>
      <td class="ng-binding">5,112,572</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:33:53</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 22:41:46</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="3h 7m 52s" class="ng-binding ng-scope">3h 7m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSource (at constructOSMStreams(ProcessOSM.java:67) (org.frett27.spatialflink.inputs.OSMPBFWayInputFormat))</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td title="205255145218 bytes" class="ng-binding">191 GB</td>
      <td class="ng-binding">425,502,729</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:34:04</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 1:19:19</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="5h 45m 15s" class="ng-binding ng-scope">5h 45m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">CHAIN Filter (Filter at constructOSMStreams(ProcessOSM.java:82)) -&gt; Map (Map at main(ProcessOSM.java:584))</td>
      <td title="123341154346 bytes" class="ng-binding">115 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td title="12960693955 bytes" class="ng-binding">12.1 GB</td>
      <td class="ng-binding">122,089,577</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:34:11</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 1:19:19</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="5h 45m 8s" class="ng-binding ng-scope">5h 45m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSink (CsvOutputFormat (path: /tmp2/nodes.csv, delimiter: ,))</td>
      <td title="12960693983 bytes" class="ng-binding">12.1 GB</td>
      <td class="ng-binding">122,089,577</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:34:04</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 1:19:19</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="5h 45m 15s" class="ng-binding ng-scope">5h 45m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Map (Map at constructOSMStreams(ProcessOSM.java:75))</td>
      <td title="123341154346 bytes" class="ng-binding">115 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td title="111754727616 bytes" class="ng-binding">104 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 19:34:07</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 2:48:34</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="7h 14m 26s" class="ng-binding ng-scope">7h 14m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Sort-Partition</td>
      <td title="111754727644 bytes" class="ng-binding">104 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td title="111754727616 bytes" class="ng-binding">104 GB</td>
      <td class="ng-binding">3,991,240,272</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:18</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 21:20:11</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="35m 52s" class="ng-binding ng-scope">35m 52s</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Map (Key Extractor)</td>
      <td title="1386079304 bytes" class="ng-binding">1.29 GB</td>
      <td class="ng-binding">5,112,572</td>
      <td title="9988858964 bytes" class="ng-binding">9.30 GB</td>
      <td class="ng-binding">5,112,572</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:18</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:48:13</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="3m 54s" class="ng-binding ng-scope">3m 54s</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">FlatMap (FlatMap at constructOSMStreams(ProcessOSM.java:221))</td>
      <td title="1386079304 bytes" class="ng-binding">1.29 GB</td>
      <td class="ng-binding">5,112,572</td>
      <td title="3887079252 bytes" class="ng-binding">3.62 GB</td>
      <td class="ng-binding">19,832,037</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:18</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:48:22</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="4m 3s" class="ng-binding ng-scope">4m 3s</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">CHAIN Filter (Filter at constructOSMStreams(ProcessOSM.java:201)) -&gt; Map (Map at main(ProcessOSM.java:609))</td>
      <td title="1386079304 bytes" class="ng-binding">1.29 GB</td>
      <td class="ng-binding">5,112,572</td>
      <td title="1445355769 bytes" class="ng-binding">1.35 GB</td>
      <td class="ng-binding">1,951,934</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:19</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:48:22</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="4m 2s" class="ng-binding ng-scope">4m 2s</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSink (CsvOutputFormat (path: /tmp2/rels.csv, delimiter: ,))</td>
      <td title="1445355797 bytes" class="ng-binding">1.35 GB</td>
      <td class="ng-binding">1,951,934</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 22:41:46</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 0:13:24</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="1h 31m 38s" class="ng-binding ng-scope">1h 31m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">FlatMap (FlatMap at constructOSMStreams(ProcessOSM.java:92))</td>
      <td title="102627572637 bytes" class="ng-binding">95.6 GB</td>
      <td class="ng-binding">425,502,729</td>
      <td title="113943764232 bytes" class="ng-binding">106 GB</td>
      <td class="ng-binding">4,747,656,843</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 22:41:46</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 2:23:03</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="3h 41m 17s" class="ng-binding ng-scope">3h 41m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Sort-Partition</td>
      <td title="113943764260 bytes" class="ng-binding">106 GB</td>
      <td class="ng-binding">4,747,656,843</td>
      <td title="797606349624 bytes" class="ng-binding">743 GB</td>
      <td class="ng-binding">4,747,656,843</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 0:19:50</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 7:50:29</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="7h 30m 38s" class="ng-binding ng-scope">7h 30m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Join(Join at projectTupleX(JoinOperator.java:1281))</td>
      <td title="909361077464 bytes" class="ng-binding">847 GB</td>
      <td class="ng-binding">37,224,838,173</td>
      <td title="151925018976 bytes" class="ng-binding">141 GB</td>
      <td class="ng-binding">4,747,656,843</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 2:45:53</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:31:41</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="5h 45m 47s" class="ng-binding ng-scope">5h 45m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">GroupReduce (GroupReduce at constructOSMStreams(ProcessOSM.java:113))</td>
      <td title="151925019172 bytes" class="ng-binding">141 GB</td>
      <td class="ng-binding">4,747,656,843</td>
      <td title="206389352568 bytes" class="ng-binding">192 GB</td>
      <td class="ng-binding">425,502,729</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:19</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 9:14:29</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="12h 30m 10s" class="ng-binding ng-scope">12h 30m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Join(Join at projectTupleX(JoinOperator.java:1281))</td>
      <td title="107081755760 bytes" class="ng-binding">99.7 GB</td>
      <td class="ng-binding">564,326,988</td>
      <td title="14095089988 bytes" class="ng-binding">13.1 GB</td>
      <td class="ng-binding">19,832,037</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:31:41</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 9:16:42</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="45m 0s" class="ng-binding ng-scope">45m 0s</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">GroupReduce (GroupReduce at constructOSMStreams(ProcessOSM.java:259))</td>
      <td title="14095090184 bytes" class="ng-binding">13.1 GB</td>
      <td class="ng-binding">19,832,037</td>
      <td title="12828637892 bytes" class="ng-binding">11.9 GB</td>
      <td class="ng-binding">3,120,058</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 20:44:19</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 9:25:51</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="12h 41m 32s" class="ng-binding ng-scope">12h 41m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Join(Join at constructOSMStreams(ProcessOSM.java:299))</td>
      <td title="22817497080 bytes" class="ng-binding">21.3 GB</td>
      <td class="ng-binding">38,908,062</td>
      <td title="13200942275 bytes" class="ng-binding">12.3 GB</td>
      <td class="ng-binding">3,120,058</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 22:41:46</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:07:57</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="9h 26m 11s" class="ng-binding ng-scope">9h 26m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Map (Key Extractor)</td>
      <td title="102627572637 bytes" class="ng-binding">95.6 GB</td>
      <td class="ng-binding">425,502,729</td>
      <td title="742221161087 bytes" class="ng-binding">691 GB</td>
      <td class="ng-binding">425,502,729</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-27, 22:41:46</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="16h 18m 32s" class="ng-binding ng-scope">16h 18m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">CHAIN Join(Join at constructOSMStreams(ProcessOSM.java:152)) -&gt; Map (Map at constructOSMStreams(ProcessOSM.java:178))</td>
      <td title="845415837595 bytes" class="ng-binding">787 GB</td>
      <td class="ng-binding">3,404,021,832</td>
      <td title="274880007776 bytes" class="ng-binding">256 GB</td>
      <td class="ng-binding">417,445,715</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:59:07</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="6h 1m 11s" class="ng-binding ng-scope">6h 1m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Filter (Filter at constructOSMStreams(ProcessOSM.java:318))</td>
      <td title="137440003916 bytes" class="ng-binding">128 GB</td>
      <td class="ng-binding">417,445,715</td>
      <td title="420916283 bytes" class="ng-binding">401 MB</td>
      <td class="ng-binding">800,749</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:59:08</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="6h 1m 9s" class="ng-binding ng-scope">6h 1m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">Map (Map at main(ProcessOSM.java:592))</td>
      <td title="13621858614 bytes" class="ng-binding">12.7 GB</td>
      <td class="ng-binding">3,920,807</td>
      <td title="17848272613 bytes" class="ng-binding">16.6 GB</td>
      <td class="ng-binding">3,920,807</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:59:09</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="6h 1m 9s" class="ng-binding ng-scope">6h 1m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSink (CsvOutputFormat (path: /tmp2/polygons.csv, delimiter: ,))</td>
      <td title="17848272641 bytes" class="ng-binding">16.6 GB</td>
      <td class="ng-binding">3,920,807</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:59:07</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="6h 1m 11s" class="ng-binding ng-scope">6h 1m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">CHAIN Filter (Filter at constructOSMStreams(ProcessOSM.java:331)) -&gt; Map (Map at main(ProcessOSM.java:600))</td>
      <td title="137440003916 bytes" class="ng-binding">128 GB</td>
      <td class="ng-binding">417,445,715</td>
      <td title="153105991188 bytes" class="ng-binding">143 GB</td>
      <td class="ng-binding">416,644,966</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices --><tbody ng-repeat="v in job.vertices" ng-class="{ active: v.id == nodeid }" ng-click="changeNode(v.id)" class="ng-scope">
    <!-- ngIf: v.type == 'regular' --><tr ng-if="v.type == 'regular'" class="ng-scope">
      <td><!-- ngIf: v['start-time'] > -1 --><span ng-if="v['start-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 8:59:07</span><!-- end ngIf: v['start-time'] > -1 --></td>
      <td><!-- ngIf: v['end-time'] > -1 --><span ng-if="v['end-time'] &gt; -1" class="ng-binding ng-scope">2017-07-28, 15:00:18</span><!-- end ngIf: v['end-time'] > -1 --></td>
      <td><!-- ngIf: v.duration > -1 --><span ng-if="v.duration &gt; -1" title="6h 1m 11s" class="ng-binding ng-scope">6h 1m</span><!-- end ngIf: v.duration > -1 --></td>
      <td class="td-long ng-binding">DataSink (CsvOutputFormat (path: /tmp2/ways.csv, delimiter: ,))</td>
      <td title="153105991216 bytes" class="ng-binding">143 GB</td>
      <td class="ng-binding">416,644,966</td>
      <td title="0 bytes" class="ng-binding">0 B</td>
      <td class="ng-binding">0</td>
      <td class="ng-binding">7</td>
      <td>
        <div class="label-group">
          <!-- ngRepeat: (index, status) in stateList --><span title="SCHEDULED" ng-class="getLabelClass()" status="SCHEDULED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="DEPLOYING" ng-class="getLabelClass()" status="DEPLOYING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-info"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="RUNNING" ng-class="getLabelClass()" status="RUNNING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-primary"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">7</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="FAILED" ng-class="getLabelClass()" status="FAILED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-danger"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELING" ng-class="getLabelClass()" status="CANCELING" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-warning"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList --><span title="CANCELED" ng-class="getLabelClass()" status="CANCELED" ng-repeat="(index, status) in stateList" class="ng-scope ng-isolate-scope label label-default"><ng-transclude><span class="ng-binding ng-scope">0</span></ng-transclude></span><!-- end ngRepeat: (index, status) in stateList -->
        </div>
      </td>
      <td> 
        <span title="FINISHED" ng-class="getLabelClass()" status="FINISHED" class="ng-isolate-scope label label-success"><ng-transclude><span class="ng-binding ng-scope">FINISHED</span></ng-transclude></span>
      </td>
    </tr><!-- end ngIf: v.type == 'regular' -->
    <!-- ngIf: nodeid && v.id == nodeid -->
  </tbody><!-- end ngRepeat: v in job.vertices -->
</table></div>
    </div><!-- end ngIf: plan -->
  </div>
</split></div>
</div></div>
    </div>
  
</body></html>